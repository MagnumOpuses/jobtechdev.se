{
  "swagger": "2.0",
  "host": "ontologi.arbetsformedlingen.se",
  "info": {
    "description": "REST API to expose functionality for the Ontology service.",
    "version": "1.1.2 BETA",
    "title": "Ontology REST API"
  },
  "schemes": ["http"],
  "basePath": "/ontology/v1",
  "tags": [
    {
      "name": "Ontology"
    }
  ],
  "paths": {
    "/{type}/{description}/related/{totype}": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Redirects to the concepts UUID related concepts",
        "description": "",
        "operationId": "lookupConceptRelatedToType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of concept to look up",
            "required": true,
            "type": "string",
            "x-example": "skill",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          },
          {
            "name": "description",
            "in": "path",
            "description": "the term of the concept to lookup",
            "required": true,
            "type": "string",
            "x-example": "java"
          },
          {
            "name": "totype",
            "in": "path",
            "description": "the type of concepts to relate to",
            "required": true,
            "type": "string",
            "x-example": "skill",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          }
        ],
        "responses": {
          "303": {
            "description": "Redirect to found concept"
          },
          "404": {
            "description": "No concept found"
          }
        }
      }
    },
    "/concept": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Fetches a list of concepts",
        "description": "",
        "operationId": "getConcepts",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Name filter for the returned results",
            "required": false,
            "type": "string",
            "x-example": "java"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Results are returned starting from this index.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "x-example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32",
            "x-example": 10
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of the returned concepts",
            "required": false,
            "type": "string",
            "x-example": "skill",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Concept"
              }
            }
          }
        }
      }
    },
    "/terms": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Fetches a list of terms",
        "description": "",
        "operationId": "getTerms",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Name filter for the returned results",
            "required": false,
            "type": "string",
            "x-example": "java"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Results are returned starting from this index.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "x-example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32",
            "x-example": 10
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of the returned concepts",
            "required": false,
            "type": "string",
            "x-example": "skill",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Concept"
              }
            }
          }
        }
      }
    },
    "/concept/{uuid}": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Fetch a concept given an uuid",
        "description": "",
        "operationId": "getConcept",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "unique universal identifier or term for a concept",
            "required": true,
            "type": "string",
            "x-example": "7b94ce90-9d59-501e-b0dc-cc746d1955a6"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Concept"
            }
          }
        }
      }
    },
    "/concept/{uuid}/terms": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Fetches the terms for the given uuid",
        "description": "",
        "operationId": "relateConceptWithTerms",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid or term for the concept whose terms are returned.",
            "required": true,
            "type": "string",
            "x-example": "289e1b55-a4d1-5adc-9394-84cf5ba9e417"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Results are returned starting from this index.",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "x-example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32",
            "x-example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RelatedTerms"
            }
          }
        }
      }
    },
    "/concept/related": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Fetches related concepts for any number of concepts and/or uuids",
        "description": "",
        "operationId": "relateMultipleConcepts",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "concept",
            "in": "query",
            "description": "Concept to find relations for (any number of parameters).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": "java"
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "UUID for concept to find relations for (any number of parameters).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-example": "c965e8aa-751a-5923-97bd-b8bd6d5e813a"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32",
            "x-example": 10
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of concepts to find relations for",
            "required": true,
            "type": "string",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RelatedConcepts"
            }
          }
        }
      }
    },
    "/concept/{uuid}/related/{type}": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Fetches related concepts for the given uuid, returning only concepts of the given type",
        "description": "",
        "operationId": "relateConceptOnType",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid for the concept for which related concepts are returned",
            "required": true,
            "type": "string",
            "x-example": "c965e8aa-751a-5923-97bd-b8bd6d5e813a"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32",
            "x-example": 10
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RelatedConcepts"
            }
          }
        }
      }
    },
    "/text-to-structure": {
      "post": {
        "tags": [
          "Ontology"
        ],
        "summary": "Analyzes a text and returns the concepts found",
        "description": "",
        "operationId": "analyzeText",
        "consumes": [
          "text/plain",
          "application/json"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Plain text or JSON containing the text to be analyzed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FoundConcept"
            }
          }
        }
      }
    },
    "/{type}/{description}": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "summary": "Redirects to the concepts UUID",
        "description": "",
        "operationId": "lookupConcept",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of concept to look up",
            "required": true,
            "type": "string",
            "x-example": "skill",
            "enum": [
              "skill",
              "occupation",
              "trait"
            ]
          },
          {
            "name": "description",
            "in": "path",
            "description": "the term of the concept to lookup",
            "required": true,
            "type": "string",
            "x-example": "java"
          }
        ],
        "responses": {
          "303": {
            "description": "Redirect to found concept"
          },
          "404": {
            "description": "No concept found"
          }
        }
      }
    }
  },
  "definitions": {
    "Concept": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RelatedTerms": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "terms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Term"
          }
        }
      }
    },
    "Term": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RelatedConcept": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "RelatedConcepts": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "concepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Concept"
          }
        },
        "relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedConcept"
          }
        }
      }
    },
    "FoundConcept": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "terms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}